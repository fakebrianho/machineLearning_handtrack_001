{"version":3,"sources":["main.js"],"names":["video","document","getElementById","handimg","canvas","context","getContext","trackButton","nextImageButton","updateNote","preloader","track","isVideo","model","mappedVal","mappedValY","pointer","THREE","Vector2","modelParams","flipHorizontal","maxNumBoxes","iouThreshold","scoreThreshold","startVideo","handTrack","then","status","style","display","runDetection","toggleVideo","gsap","to","opacity","delay","duration","stopVideo","addEventListener","detect","predictions","slice","forEach","prediction","label","midval","bbox","midvalY","midval2","width","midvalY2","height","mapRange","renderPredictions","requestAnimationFrame","load","lmodel","console","log","disabled","canvas3","querySelector","scene","Scene","renderer","WebGLRenderer","geometry","BoxGeometry","material","MeshBasicMaterial","color","mesh","Mesh","add","sizes","window","innerWidth","innerHeight","camera","PerspectiveCamera","position","z","setSize","setPixelRatio","Math","min","devicePixelRatio","aspect","updateProjectionMatrix","fullscreenElement","requestFullscreen","exitFullscreen","Mover","x","y","m","radius","widthSeg","heightSeg","SphereBufferGeometry","testGeo","Vector3","vel","random","acc","mass","force","f","clampScalar","set","test","attract","mover","attractor","amass","mmass","a","b","sub","setLength","strength","applyForce","onPointerMove","value","c","d","event","clock","Clock","animate","elapsedTime","getElapsedTime","tracked","rotation","vector","unproject","dir","normalize","distance","pos","clone","multiplyScalar","lerp","update","render"],"mappings":"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","file":"main.1f19ae8e.js","sourceRoot":"../src","sourcesContent":["const video = document.getElementById('myvideo')\nconst handimg = document.getElementById('handimage')\nconst canvas = document.getElementById('canvas')\nconst context = canvas.getContext('2d')\nlet trackButton = document.getElementById('trackbutton')\nlet nextImageButton = document.getElementById('nextimagebutton')\nlet updateNote = document.getElementById('updatenote')\nlet preloader = document.getElementById('preload')\nlet track = []\nlet isVideo = false\nlet model = null\nlet mappedVal\nlet mappedValY\nconst pointer = new THREE.Vector2()\n\nconst modelParams = {\n\tflipHorizontal: true, // flip e.g for video\n\tmaxNumBoxes: 20, // maximum number of boxes to detect\n\tiouThreshold: 0.5, // ioU threshold for non-max suppression\n\tscoreThreshold: 0.6, // confidence threshold for predictions.\n}\n\nfunction startVideo() {\n\thandTrack.startVideo(video).then(function (status) {\n\t\tvideo.style.display = 'none'\n\t\t// console.log('video started', status)\n\t\tif (status) {\n\t\t\t// updateNote.innerText = 'Video started. Now tracking'\n\t\t\tisVideo = true\n\t\t\trunDetection()\n\t\t} else {\n\t\t\t// updateNote.innerText = 'Please enable video'\n\t\t}\n\t})\n}\n\nfunction toggleVideo() {\n\tgsap.to(preloader, { opacity: 0, delay: 0.5, duration: 1.5 })\n\t// preloader.style.opacity = 0\n\tif (!isVideo) {\n\t\t// updateNote.innerText = 'Starting video'\n\t\tstartVideo()\n\t} else {\n\t\t// updateNote.innerText = 'Stopping video'\n\t\thandTrack.stopVideo(video)\n\t\tisVideo = false\n\t\t// updateNote.innerText = 'Video stopped'\n\t}\n}\n\ntrackButton.addEventListener('click', function () {\n\ttoggleVideo()\n})\n\nfunction runDetection() {\n\tmodel.detect(video).then((predictions) => {\n\t\t// console.log('Predictions: ', predictions)\n\t\ttrack = predictions.slice(0)\n\t\t// model.renderPredictions(predictions, canvas, context, video)\n\t\t//code taken from the pong boilerplate in the handtrack.js demo, here I'm normalizing\n\t\t// console.log(predictions)\n\t\tpredictions.forEach((prediction) => {\n\t\t\tif (prediction.label == 'face') {\n\t\t\t\tlet midval = prediction.bbox[0] + prediction.bbox[2] / 2\n\t\t\t\tlet midvalY = prediction.bbox[1] + prediction.bbox[2] / 2\n\n\t\t\t\tlet midval2 = midval / video.width\n\t\t\t\tlet midvalY2 = midvalY / video.height\n\t\t\t\tmappedVal = mapRange(midval2, 0, 1, -1, 1)\n\t\t\t\tmappedValY = mapRange(midvalY2, 0, 1, -1, 1)\n\t\t\t}\n\t\t})\n\t\t// if (predictions[0]) {\n\t\t// \tlet midval = predictions[0].bbox[0] + predictions[0].bbox[2] / 2\n\t\t// \tlet midvalY = predictions[0].bbox[1] + predictions[0].bbox[2] / 2\n\t\t// \tlet midval2 = midval / video.width\n\t\t// \tlet midvalY2 = midvalY / video.height\n\t\t// \tmappedVal = mapRange(midval2, 0, 1, -1, 1)\n\t\t// \tmappedValY = mapRange(midvalY2, 0, 1, -1, 1)\n\t\t// }\n\t\tmodel.renderPredictions(predictions, canvas, context, video)\n\t\tif (isVideo) {\n\t\t\trequestAnimationFrame(runDetection)\n\t\t}\n\t})\n}\n\n// Load the model.\nhandTrack.load(modelParams).then((lmodel) => {\n\tmodel = lmodel\n\tconsole.log(model)\n\t// updateNote.innerText = 'Loaded Model!'\n\ttrackButton.disabled = false\n})\n\n/*------------------------------\nGlobal Setup\n------------------------------*/\nconst canvas3 = document.querySelector('.threeCanvas')\nconst scene = new THREE.Scene()\nconst renderer = new THREE.WebGLRenderer({\n\tcanvas: canvas3,\n})\nconst geometry = new THREE.BoxGeometry(1, 1, 1)\nconst material = new THREE.MeshBasicMaterial({ color: 0xff0000 })\nconst mesh = new THREE.Mesh(geometry, material)\nscene.add(mesh)\n\n/*------------------------------\nDimensions\n------------------------------*/\nconst sizes = {\n\twidth: window.innerWidth,\n\theight: window.innerHeight,\n}\n\nconst camera = new THREE.PerspectiveCamera(\n\t75,\n\tsizes.width / sizes.height,\n\t0.1,\n\t1000\n)\ncamera.position.z = 30\nscene.add(camera)\n\nrenderer.setSize(sizes.width, sizes.height)\nrenderer.setPixelRatio(Math.min(window.devicePixelRatio, 2))\n/*------------------------------\nResize\n------------------------------*/\nwindow.addEventListener('resize', () => {\n\t/*------------------------------\n  Update Sizes\n  ------------------------------*/\n\tsizes.width = window.innerWidth\n\tsizes.height = window.innerHeight\n\t/*------------------------------\n  Update Camera\n  ------------------------------*/\n\tcamera.aspect = sizes.width / sizes.height\n\tcamera.updateProjectionMatrix()\n\t/*------------------------------\n  Update Renderer\n  ------------------------------*/\n\trenderer.setSize(sizes.width, sizes.height)\n\trenderer.setPixelRatio(Math.min(window.devicePixelRatio, 2))\n})\n\n/*------------------------------\nFullscreen Function\n------------------------------*/\nwindow.addEventListener('dblclick', () => {\n\tif (!document.fullscreenElement) {\n\t\tcanvas.requestFullscreen()\n\t} else {\n\t\tdocument.exitFullscreen()\n\t}\n})\n/*------------------------------\nmover\n------------------------------*/\n\nclass Mover {\n\tconstructor(x, y, z, m, radius, widthSeg, heightSeg) {\n\t\tthis.geometry = new THREE.SphereBufferGeometry(\n\t\t\tradius,\n\t\t\twidthSeg,\n\t\t\theightSeg\n\t\t)\n\t\tthis.testGeo = new THREE.BoxGeometry(1, 1, 1)\n\t\tthis.material = new THREE.MeshBasicMaterial({ color: '#ff00ff' })\n\t\tthis.position = new THREE.Vector3(x, y, z)\n\t\tthis.vel = new THREE.Vector3(\n\t\t\tMath.random() * 0.11,\n\t\t\tMath.random() * 0.11,\n\t\t\t0\n\t\t)\n\t\tthis.acc = new THREE.Vector3(0, 0, 0)\n\t\tthis.mass = m\n\t\tthis.mesh = new THREE.Mesh(this.testGeo, this.material)\n\t}\n\n\tapplyForce(force) {\n\t\tlet f = force\n\t\tthis.acc.add(f)\n\t}\n\n\tupdate() {\n\t\tthis.vel.add(this.acc)\n\t\tthis.vel.clampScalar(-0.09, 0.09) // clamp speed\n\t\tconsole.log(this.vel)\n\t\tthis.mesh.position.add(this.vel)\n\t\tthis.acc.set(0, 0, 0)\n\t}\n}\nlet test = new Mover(0, -0.5, 0, 15, 32, 16)\nscene.add(test.mesh)\n/*------------------------------\nAttraction Function\n------------------------------*/\nconst attract = (mover, attractor, amass, mmass) => {\n\tlet a = new THREE.Vector3(attractor.position.x, attractor.position.y, 0.5)\n\tlet b = new THREE.Vector3(mover.mesh.position.x, mover.mesh.position.y, 0.5)\n\tlet force = a.sub(b)\n\tforce.setLength(0.17)\n\t// console.log(force)\n\tlet strength\n\t/*------------------------------\n    Block\n    ------------------------------*/\n\t// console.log(a)\n\t// let distanceSquared =\n\t// \tforce.x * force.x + force.y * force.y + force.z * force.z\n\t// let g = 1\n\t// if (distanceSquared > 0) {\n\t// \tstrength = (amass * mmass) / distanceSquared\n\t// } else {\n\t// \tstrength = 0\n\t// }\n\t/*------------------------------\n    Block\n    ------------------------------*/\n\n\t// force = force.normalize()\n\t// force = force.normalize().multiplyScalar(strength)\n\t// dir = dir.sub(mover.pos)\n\t// console.log(force)\n\t// console.log(distanceSquared)\n\t// console.log(strength)\n\tmover.applyForce(force)\n\t// .sub(attractor.pos, mover.pos)\n}\n\nwindow.addEventListener('pointermove', onPointerMove)\nfunction mapRange(value, a, b, c, d) {\n\t// first map value from (a..b) to (0..1)\n\tvalue = (value - a) / (b - a)\n\t// then map it from (0..1) to (c..d) and return it\n\treturn c + value * (d - c)\n}\nfunction onPointerMove(event) {\n\t// calculate pointer position in normalized device coordinates\n\t// (-1 to +1) for both components\n\t// pointer.x = (event.clientX / window.innerWidth) * 2 - 1\n\t// pointer.y = -(event.clientY / window.innerHeight) * 2 + 1\n\t// var vector = new THREE.Vector3(pointer.x, pointer.y, 0.5)\n\t// vector.unproject(camera)\n\t// var dir = vector.sub(camera.position).normalize()\n\t// var distance = -camera.position.z / dir.z\n\t// var pos = camera.position.clone().add(dir.multiplyScalar(distance))\n\t// mesh.position.copy(pos)\n}\n\n//Map function from p5\n\nconst clock = new THREE.Clock()\nconst animate = () => {\n\t/*------------------------------\n  Smooth Animation\n  ------------------------------*/\n\tconst elapsedTime = clock.getElapsedTime()\n\n\t/*------------------------------\n  Update Meshes\n  ------------------------------*/\n\n\ttrack.forEach((tracked) => {\n\t\tif (tracked.label == 'closed') {\n\t\t\tmesh.rotation.x = elapsedTime\n\t\t\tmesh.rotation.y = elapsedTime\n\t\t\tattract(test, mesh, 1, 1)\n\t\t}\n\t})\n\t// console.log(mappedValY)\n\tif (mappedValY) {\n\t\tvar vector = new THREE.Vector3(mappedVal, -mappedValY, 0.5)\n\t\tvector.unproject(camera)\n\t\tvar dir = vector.sub(camera.position).normalize()\n\t\tvar distance = -camera.position.z / dir.z\n\t\tvar pos = camera.position.clone().add(dir.multiplyScalar(distance))\n\t\t// mesh.position.copy(pos)\n\t\tmesh.position.lerp(pos, 0.2)\n\t\tconsole.log(pos)\n\t}\n\ttest.update()\n\t/*------------------------------\n  Render\n  ------------------------------*/\n\trenderer.render(scene, camera)\n\n\t/*------------------------------\n  Core\n  ------------------------------*/\n\twindow.requestAnimationFrame(animate)\n}\n\nanimate()\n"]}